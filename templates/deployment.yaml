apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.name }}"
  labels:
    app: "{{ .Values.name }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: "{{ .Values.name }}"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        app: "{{ .Values.name }}"
    spec:
      serviceAccountName: {{ .Values.serviceAccountName | default "default" }}
      containers:
        - name: "{{ .Values.name }}"
          image: {{ .Values.deployment.image }}:{{ .Values.deployment.tag }}
          imagePullPolicy: Always
          ports:
            - containerPort: {{ .Values.deployment.port | default 5000 }}
          env:
            - name: APP_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.name }}-secret
                  key: APP_SECRET
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.deployment.port | default 5000 }}
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.deployment.port | default 5000 }}
            initialDelaySeconds: 30
            periodSeconds: 30
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.name }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

